{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\modelProiectCareMergeCuHeroku-2\\\\client\\\\src\\\\components\\\\AllSongs.js\",\n    _s = $RefreshSig$();\n\nimport DBstore from './components/Playlists/DBstore';\nimport Song from './components/Playlists/Song';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AllSong(props) {\n  _s();\n\n  const songs = useSelector(state => {\n    state.songs.songs;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.list,\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(SongItem, {\n        playlistID: song.playlistID,\n        title: song.title,\n        songUrl: song.songUrl,\n        musicGenre: song.musicGenre\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 6\n    }, this)\n  }, void 0, false);\n}\n\n_s(AllSong, \"ZRNnRT0zOYZVP/NnHH3UI5X8Bb4=\", true);\n\n_c = AllSong;\nexport default AllSong;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllSong\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/modelProiectCareMergeCuHeroku-2/client/src/components/AllSongs.js"],"names":["DBstore","Song","AllSong","props","songs","useSelector","state","classes","list","map","song","playlistID","title","songUrl","musicGenre","id"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,gCAApB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AAAA;;AAEnB,QAAMC,KAAK,GAAGC,WAAW,CAAEC,KAAD,IAAW;AACjCA,IAAAA,KAAK,CAACF,KAAN,CAAYA,KAAZ;AACH,GAFwB,CAAzB;AAIA,sBAAO;AAAA,2BACN;AAAI,MAAA,SAAS,EAAEG,OAAO,CAACC,IAAvB;AAAA,gBACIJ,KAAK,CAACK,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAEE,QAAA,UAAU,EAAEA,IAAI,CAACC,UAFnB;AAGE,QAAA,KAAK,EAAED,IAAI,CAACE,KAHd;AAIE,QAAA,OAAO,EAAEF,IAAI,CAACG,OAJhB;AAKE,QAAA,UAAU,EAAEH,IAAI,CAACI;AALnB,SACOJ,IAAI,CAACK,EADZ;AAAA;AAAA;AAAA;AAAA,cADD;AADJ;AAAA;AAAA;AAAA;AAAA;AADM,mBAAP;AAaH;;GAnBQb,O;;KAAAA,O;AAqBT,eAAeA,OAAf","sourcesContent":["import DBstore from './components/Playlists/DBstore'\r\nimport Song from './components/Playlists/Song';\r\n\r\nfunction AllSong(props){\r\n\r\n    const songs = useSelector((state) => {\r\n        state.songs.songs\r\n    })\r\n\r\n    return(<>\r\n     <ul className={classes.list}>\r\n        {songs.map((song) => (\r\n          <SongItem\r\n            key={song.id}\r\n            playlistID={song.playlistID}\r\n            title={song.title}\r\n            songUrl={song.songUrl}\r\n            musicGenre={song.musicGenre}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </>)\r\n}\r\n\r\nexport default AllSong\r\n"]},"metadata":{},"sourceType":"module"}