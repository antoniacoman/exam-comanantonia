{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\modelProiectCareMergeCuHeroku-2\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { Switch, Router, Routes, Route } from 'react-router-dom';\nimport { StaticRouter } from 'react-router';\nimport { useEffect, useState } from 'react';\nimport DBstore from './components/Playlists/DBstore';\nimport Song from './components/Playlists/Song';\nimport AddSongForm from './AddSongForm';\nimport store from './components/Playlists/DBstore';\nimport AllSongs from './components/AllSongs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [ids, setIds] = useState([]);\n  useEffect(() => {\n    DBstore.getSongs();\n    DBstore.emitter.addListener('GET_SONGS_SUCCESS', () => {\n      setIds(DBstore.data);\n    });\n  }, []);\n\n  const addSong = song => {\n    DBstore.addSong(song);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Exam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: /*#__PURE__*/_jsxDEV(AllSongs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Add a song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddSongForm, {\n      onAdd: addSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"EnfQASC+5WpWlxgwezrX3rKK9FY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/modelProiectCareMergeCuHeroku-2/client/src/App.js"],"names":["logo","Switch","Router","Routes","Route","StaticRouter","useEffect","useState","DBstore","Song","AddSongForm","store","AllSongs","App","ids","setIds","getSongs","emitter","addListener","data","addSong","song"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,KAAjC,QAA8C,kBAA9C;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,gCAAlB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;;AAKA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,OAAO,CAACQ,QAAR;AACAR,IAAAA,OAAO,CAACS,OAAR,CAAgBC,WAAhB,CAA4B,mBAA5B,EAAiD,MAAM;AACrDH,MAAAA,MAAM,CAACP,OAAO,CAACW,IAAT,CAAN;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMC,OAAO,GAAIC,IAAD,IAAU;AACxBb,IAAAA,OAAO,CAACY,OAAR,CAAgBC,IAAhB;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAWI,QAAC,MAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAA,+BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBJ,eAkBI,QAAC,WAAD;AAAa,MAAA,KAAK,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA,kBADF;AAwBD;;GAvCQP,G;;KAAAA,G;AAyCT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { Switch, Router, Routes, Route } from 'react-router-dom'\nimport { StaticRouter } from 'react-router'\nimport { useEffect, useState } from 'react';\nimport DBstore from './components/Playlists/DBstore'\nimport Song from './components/Playlists/Song';\nimport AddSongForm from './AddSongForm'\nimport store from './components/Playlists/DBstore';\nimport AllSongs from './components/AllSongs';\n\n\n\n\nfunction App() {\n\n  const [ids, setIds] = useState([])\n\n  useEffect(() => {\n    DBstore.getSongs();\n    DBstore.emitter.addListener('GET_SONGS_SUCCESS', () => {\n      setIds(DBstore.data)\n    })\n  }, [])\n\n  const addSong = (song) => {\n    DBstore.addSong(song)\n  }\n\n  return (\n    <>\n      <h1>Exam</h1>\n      {/* <a href = \"/3\">3</a>\n      \n        <Routes>\n          {ids.map((song) => {\n            let id = song.SongID\n            return <Route path={\"/\" + id} element={<Song key={song.SongID} member={song} />} />\n          })}\n        </Routes> */}\n\n        <Switch>\n          <Route path=\"/\" exact>\n              <AllSongs />\n            </Route>\n        </Switch>\n\n        <h3>Add a song</h3>\n        <AddSongForm onAdd={addSong} />\n\n    </>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}